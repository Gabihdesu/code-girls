#!/bin/bash

############################
# COMO EXECUTAR
# PASSAR O NOME DO SCRIPT (scriptIAM.sh) NOME DO CSV (usuarios.csv)
# Executar no BASH = bash scriptIAM.sh usuarios.csv


# Verifica se o argumento de entrada foi fornecido
if [ -z "$1" ]; then
    echo "Por favor, forneÃ§a o arquivo CSV como argumento."
    exit 1
fi

# Armazena o nome do arquivo de entrada
INPUT="$1"

# Verifica se o arquivo de entrada existe
if [ ! -f "$INPUT" ]; then
    echo "$INPUT arquivo nÃ£o encontrado"
    exit 1
fi

# Verifica se o utilitÃ¡rio dos2unix estÃ¡ instalado
command -v dos2unix >/dev/null || { echo "utilitÃ¡rio dos2unix nÃ£o encontrado. Por favor, instale dos2unix antes de executar o script."; exit 1; }

# Converte o arquivo CSV para o formato Unix para garantir compatibilidade
dos2unix "$INPUT"

# Loop para ler cada linha do arquivo CSV e processar as informaÃ§Ãµes
while IFS= read -r line || [ -n "$line" ]; do
    
	# Separa as informaÃ§Ãµes usando o delimitador ';' e atribui a variÃ¡veis
    usuario=$(echo "$line" | cut -d';' -f1)
    grupo=$(echo "$line" | cut -d';' -f2)
    senha=$(echo "$line" | cut -d';' -f3)

    # Cria um usuÃ¡rio no IAM
    aws iam create-user --user-name "$usuario"
    # Define uma senha e solicita a redefiniÃ§Ã£o da senha no prÃ³ximo login
    aws iam create-login-profile --password-reset-required --user-name "$usuario" --password "$senha"
    # Adiciona o usuÃ¡rio ao grupo especificado
    aws iam add-user-to-group --group-name "$grupo" --user-name "$usuario"
done < "$INPUT"

echo "UsuÃ¡rios importados com sucesso."